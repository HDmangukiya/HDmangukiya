name: Generate Snake

on:
  schedule:
    - cron: "0 */12 * * *"  # Every 12 hours
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Clone repo
        uses: actions/checkout@v3
    
      # Step 2: Generate snake files
      - name: Generate the snake files in './dist/'
        uses: Platane/snk@v3
        id: snake-gif
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Configure Git for commits
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Step 4: Commit generated files
      - name: Commit generated files
        run: |
          git add dist/
          git commit -m "Update snake animations" || echo "No changes to commit"

      # Step 5: Push to output branch
      - name: Push to output branch
        run: |
          # Check if output branch exists
          if git ls-remote --exit-code --heads origin output; then
            git checkout output
          else
            git checkout --orphan output
            git rm -rf .
          fi

          # Add and commit generated files (again, in case of orphan branch)
          git add dist/
          git commit -m "Update snake animations" || echo "No changes to commit"

          # Push branch
          git push origin output --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
